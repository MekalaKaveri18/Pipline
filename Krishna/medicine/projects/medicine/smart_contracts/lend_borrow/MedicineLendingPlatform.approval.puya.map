{
  "version": 3,
  "sources": [
    "contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCQ;AAAiB;;AAAjB;AACA;;AAAyB;;AAAzB;AACA;;AAAwB;;AAAxB;AARR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;AAAA;;AAmGK;;AAAA;AAAA;AAAA;;AAAA;AAnGL;;;AAmGK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAbA;;AAAA;AAAA;AAAA;;AAAA;AAtFL;;;AAsFK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AA1DL;;;AA0DK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAvCL;;;AAuCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAbL;;;AAAA;;;AAAA;;;AAaK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAbL;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA;;;AAU+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;;AAAA;;AAAA;AAAjB;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAf;;;AAGuB;AAAP;;AAAA;AAKY;;AAJV;;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAMV;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;AAEO;AAAP;;AAAA;AAER;;;;AAK+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;;AAAA;;AAAA;AAAjB;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAf;;;AACmB;;AAAA;;;AAAa;;AAAb;AAAA;;;AAAwD;;AAAA;;;AAAxB;;AAAA;AAAA;AAAhC;;;AACO;;;;AAEqB;;AAFrB;AAAA;;AAAA;AAIN;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AACO;AAAP;;AAAA;AAEO;AAAP;;AAAA;AACL;AAAP;;AAAA;AAER;;;;;;;;;;AAO+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;;AAAA;;AAAA;AAAjB;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAf;;;AACiC;;AAAA;;;AAAd;;AAAA;AAAnB;;;AAC2B;AAAP;;AAAA;AACO;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAA3B;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAoB;AAAA;;AACG;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAvB;;;AAC2B;;AAAA;;;AAAa;;AAAb;AAA3B;;;AAK0C;;AAAA;;;AACY;;AAAZ;AAHL;;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAKT;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;AAEO;AAAP;;AAAA;;;;;;;;AACL;AAAP;;AAAA;AACD;AAAP;;AAAA;AAER;;;AAK+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;;AAAA;;AAAA;AAAjB;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AACD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAf;;;AAGuB;AAAP;;AAAA;AACD;AAAP;;AAAA;AAER;;;;AAK+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;;AAAA;;AAAA;AAAjB;;;AACgB;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAf;;;AACwD;;AAAA;;;AAAvB;;AAAA;AAAA;AAAV;AAAA;AAAA;;AAAA;AAAP;;AAAA;AACD;AAAP;;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 2 1"
    },
    "6": {
      "op": "bytecblock \"medicines\" 0x00 0x80 0x151f7c75 \"medicine_requests\" 0x0000 \"medicine_records\" 0x0002 0x0000000000000000"
    },
    "77": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "79": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "82": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\""
      ],
      "stack_out": [
        "\"medicines\""
      ]
    },
    "83": {
      "op": "bytec 5 // 0x0000",
      "defined_out": [
        "\"medicines\"",
        "0x0000"
      ],
      "stack_out": [
        "\"medicines\"",
        "0x0000"
      ]
    },
    "85": {
      "op": "app_global_put",
      "stack_out": []
    },
    "86": {
      "op": "bytec 4 // \"medicine_requests\"",
      "defined_out": [
        "\"medicine_requests\""
      ],
      "stack_out": [
        "\"medicine_requests\""
      ]
    },
    "88": {
      "op": "bytec 5 // 0x0000",
      "stack_out": [
        "\"medicine_requests\"",
        "0x0000"
      ]
    },
    "90": {
      "op": "app_global_put",
      "stack_out": []
    },
    "91": {
      "op": "bytec 6 // \"medicine_records\"",
      "defined_out": [
        "\"medicine_records\""
      ],
      "stack_out": [
        "\"medicine_records\""
      ]
    },
    "93": {
      "op": "bytec 5 // 0x0000",
      "stack_out": [
        "\"medicine_records\"",
        "0x0000"
      ]
    },
    "95": {
      "op": "app_global_put",
      "stack_out": []
    },
    "96": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "98": {
      "op": "bz main_bare_routing@10",
      "stack_out": []
    },
    "101": {
      "op": "pushbytess 0xdd84679a 0x23734fda 0x43555ddb 0x48757a8b 0xff36f22d // method \"register_medicine(string,uint64,uint64)bool\", method \"request_medicine(string)bool\", method \"approve_request(string)bool\", method \"return_medicine(string)bool\", method \"is_expired(string)bool\"",
      "defined_out": [
        "Method(approve_request(string)bool)",
        "Method(is_expired(string)bool)",
        "Method(register_medicine(string,uint64,uint64)bool)",
        "Method(request_medicine(string)bool)",
        "Method(return_medicine(string)bool)"
      ],
      "stack_out": [
        "Method(register_medicine(string,uint64,uint64)bool)",
        "Method(request_medicine(string)bool)",
        "Method(approve_request(string)bool)",
        "Method(return_medicine(string)bool)",
        "Method(is_expired(string)bool)"
      ]
    },
    "128": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(approve_request(string)bool)",
        "Method(is_expired(string)bool)",
        "Method(register_medicine(string,uint64,uint64)bool)",
        "Method(request_medicine(string)bool)",
        "Method(return_medicine(string)bool)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(register_medicine(string,uint64,uint64)bool)",
        "Method(request_medicine(string)bool)",
        "Method(approve_request(string)bool)",
        "Method(return_medicine(string)bool)",
        "Method(is_expired(string)bool)",
        "tmp%2#0"
      ]
    },
    "131": {
      "op": "match main_register_medicine_route@5 main_request_medicine_route@6 main_approve_request_route@7 main_return_medicine_route@8 main_is_expired_route@9",
      "stack_out": []
    },
    "143": {
      "block": "main_after_if_else@12",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "144": {
      "op": "return",
      "stack_out": []
    },
    "145": {
      "block": "main_is_expired_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "147": {
      "op": "!",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "148": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "149": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "151": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "152": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "155": {
      "callsub": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.is_expired",
      "op": "callsub is_expired",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "158": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "0x151f7c75"
      ]
    },
    "159": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%36#0"
      ]
    },
    "160": {
      "op": "concat",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "161": {
      "op": "log",
      "stack_out": []
    },
    "162": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "163": {
      "op": "return",
      "stack_out": []
    },
    "164": {
      "block": "main_return_medicine_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "166": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "167": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "168": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "170": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "171": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "174": {
      "callsub": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.return_medicine",
      "op": "callsub return_medicine",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "177": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "0x151f7c75"
      ]
    },
    "178": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%29#0"
      ]
    },
    "179": {
      "op": "concat",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "180": {
      "op": "log",
      "stack_out": []
    },
    "181": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "182": {
      "op": "return",
      "stack_out": []
    },
    "183": {
      "block": "main_approve_request_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "185": {
      "op": "!",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "186": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "187": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "189": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "190": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "193": {
      "callsub": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.approve_request",
      "op": "callsub approve_request",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "196": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0",
        "0x151f7c75"
      ]
    },
    "197": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%22#0"
      ]
    },
    "198": {
      "op": "concat",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "199": {
      "op": "log",
      "stack_out": []
    },
    "200": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "201": {
      "op": "return",
      "stack_out": []
    },
    "202": {
      "block": "main_request_medicine_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "204": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "205": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "206": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "208": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "209": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "212": {
      "callsub": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.request_medicine",
      "op": "callsub request_medicine",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "215": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0",
        "0x151f7c75"
      ]
    },
    "216": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%15#0"
      ]
    },
    "217": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "218": {
      "op": "log",
      "stack_out": []
    },
    "219": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "220": {
      "op": "return",
      "stack_out": []
    },
    "221": {
      "block": "main_register_medicine_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "223": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "224": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "225": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "227": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "228": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "231": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "234": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "reinterpret_bytes[8]%0#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "237": {
      "callsub": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.register_medicine",
      "op": "callsub register_medicine",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "240": {
      "op": "bytec_3 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0x151f7c75"
      ]
    },
    "241": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%8#0"
      ]
    },
    "242": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "243": {
      "op": "log",
      "stack_out": []
    },
    "244": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "245": {
      "op": "return",
      "stack_out": []
    },
    "246": {
      "block": "main_bare_routing@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "248": {
      "op": "bnz main_after_if_else@12",
      "stack_out": []
    },
    "251": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "253": {
      "op": "!",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "254": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "255": {
      "op": "intc_2 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "256": {
      "op": "return",
      "stack_out": []
    },
    "257": {
      "subroutine": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "params": {
        "array_items_count#0": "uint64",
        "array_head_and_tail#0": "bytes",
        "new_items_count#0": "uint64",
        "new_head_and_tail#0": "bytes"
      },
      "block": "dynamic_array_concat_dynamic_element",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "260": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "item_offset_adjustment#2"
      ]
    },
    "262": {
      "op": "dup"
    },
    "263": {
      "op": "frame_dig -2"
    },
    "265": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "new_head#0",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_items_count#0 (copy)",
        "2"
      ]
    },
    "266": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0"
      ]
    },
    "267": {
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)",
        "item_offset_adjustment#0",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)"
      ]
    },
    "269": {
      "op": "intc_1 // 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "array_items_count#0 (copy)",
        "2"
      ]
    },
    "270": {
      "op": "*",
      "defined_out": [
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ]
    },
    "271": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "272": {
      "block": "dynamic_array_concat_dynamic_element_for_header@1",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "274": {
      "op": "frame_dig 3",
      "defined_out": [
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%0#0"
      ]
    },
    "276": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%0#0"
      ]
    },
    "277": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "280": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "282": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "284": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "head_offset#0",
        "head_offset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "285": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "287": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "288": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "290": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%1#0"
      ]
    },
    "291": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%2#0"
      ]
    },
    "292": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0"
      ]
    },
    "295": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%3#0",
        "new_head#0"
      ]
    },
    "297": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%3#0"
      ]
    },
    "298": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "299": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "301": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "302": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "303": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "305": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@1"
    },
    "308": {
      "block": "dynamic_array_concat_dynamic_element_after_for@4",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "310": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "311": {
      "op": "frame_bury 0",
      "defined_out": [
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "313": {
      "op": "intc_0 // 0",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "314": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "316": {
      "block": "dynamic_array_concat_dynamic_element_for_header@5",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "head_offset#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "318": {
      "op": "frame_dig 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ]
    },
    "320": {
      "op": "<",
      "defined_out": [
        "continue_looping%1#0",
        "head_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "continue_looping%1#0"
      ]
    },
    "321": {
      "op": "bz dynamic_array_concat_dynamic_element_after_for@8",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "324": {
      "op": "frame_dig -1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "326": {
      "op": "frame_dig 4",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0"
      ]
    },
    "328": {
      "op": "dup",
      "defined_out": [
        "head_offset#0",
        "head_offset#0 (copy)",
        "item_offset_adjustment#0",
        "new_head_and_tail#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "329": {
      "op": "cover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head_and_tail#0 (copy)",
        "head_offset#0 (copy)"
      ]
    },
    "331": {
      "op": "extract_uint16",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0"
      ]
    },
    "332": {
      "op": "frame_dig 0",
      "defined_out": [
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "item_offset#0",
        "item_offset_adjustment#2"
      ]
    },
    "334": {
      "op": "+",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%5#0"
      ]
    },
    "335": {
      "op": "itob",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%6#0"
      ]
    },
    "336": {
      "op": "extract 6 2",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0"
      ]
    },
    "339": {
      "op": "frame_dig 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "tmp%7#0",
        "new_head#0"
      ]
    },
    "341": {
      "op": "swap",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0",
        "tmp%7#0"
      ]
    },
    "342": {
      "op": "concat",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "new_head#0"
      ]
    },
    "343": {
      "op": "frame_bury 1",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "345": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0",
        "2"
      ]
    },
    "346": {
      "op": "+",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "head_offset#0"
      ]
    },
    "347": {
      "op": "frame_bury 4",
      "defined_out": [
        "head_offset#0",
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ]
    },
    "349": {
      "op": "b dynamic_array_concat_dynamic_element_for_header@5"
    },
    "352": {
      "block": "dynamic_array_concat_dynamic_element_after_for@8",
      "stack_in": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0"
      ],
      "op": "frame_dig -4",
      "defined_out": [
        "array_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)"
      ]
    },
    "354": {
      "op": "frame_dig -2",
      "defined_out": [
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "array_items_count#0 (copy)",
        "new_items_count#0 (copy)"
      ]
    },
    "356": {
      "op": "+",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%8#0"
      ]
    },
    "357": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%9#0"
      ]
    },
    "358": {
      "op": "extract 6 2",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0"
      ]
    },
    "361": {
      "op": "frame_dig 1",
      "defined_out": [
        "new_head#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%10#0",
        "new_head#0"
      ]
    },
    "363": {
      "op": "concat",
      "defined_out": [
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0"
      ]
    },
    "364": {
      "op": "frame_dig -3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)"
      ]
    },
    "366": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#0"
      ]
    },
    "368": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_head_and_tail#0 (copy)",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "array_head_and_tail#0 (copy)",
        "tmp%0#0",
        "item_offset_adjustment#2"
      ]
    },
    "370": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%11#0",
        "tmp%14#0"
      ]
    },
    "371": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0"
      ]
    },
    "372": {
      "op": "frame_dig -1",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "374": {
      "op": "len",
      "defined_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "375": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)"
      ]
    },
    "377": {
      "op": "frame_dig 2",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "new_head_and_tail#0 (copy)",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%17#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0"
      ]
    },
    "379": {
      "op": "uncover 2",
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "new_head_and_tail#0 (copy)",
        "item_offset_adjustment#0",
        "tmp%17#0"
      ]
    },
    "381": {
      "op": "substring3",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%15#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%15#0",
        "tmp%18#0"
      ]
    },
    "382": {
      "op": "concat",
      "defined_out": [
        "item_offset_adjustment#0",
        "item_offset_adjustment#2",
        "new_head#0",
        "tmp%0#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "item_offset_adjustment#2",
        "new_head#0",
        "item_offset_adjustment#0",
        "tmp%0#0",
        "head_offset#0",
        "tmp%19#0"
      ]
    },
    "383": {
      "op": "frame_bury 0"
    },
    "385": {
      "retsub": true,
      "op": "retsub"
    },
    "386": {
      "subroutine": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.register_medicine",
      "params": {
        "name#0": "bytes",
        "expiry#0": "bytes",
        "quantity#0": "bytes"
      },
      "block": "register_medicine",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "389": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "390": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"medicines\""
      ]
    },
    "391": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "392": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "393": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "394": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "395": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0"
      ]
    },
    "396": {
      "block": "register_medicine_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "398": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "400": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "401": {
      "op": "bz register_medicine_after_for@6",
      "stack_out": [
        "tmp%0#0",
        "i#0"
      ]
    },
    "404": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "0"
      ]
    },
    "405": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "0",
        "\"medicines\""
      ]
    },
    "406": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "407": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "408": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "409": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0"
      ]
    },
    "412": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "414": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "415": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "417": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "418": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "419": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "421": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "422": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "423": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "425": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "426": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0"
      ]
    },
    "427": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "429": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "1"
      ]
    },
    "430": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "431": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "i#0"
      ]
    },
    "432": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "434": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0"
      ]
    },
    "435": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "437": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0"
      ]
    },
    "438": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "440": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "441": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0"
      ]
    },
    "443": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0",
        "2"
      ]
    },
    "444": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "445": {
      "op": "dig 4",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "447": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "448": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "449": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "451": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "452": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "453": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "m#0",
        "m#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)"
      ]
    },
    "454": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)",
        "0"
      ]
    },
    "455": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0"
      ]
    },
    "456": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "m#0 (copy)"
      ]
    },
    "458": {
      "op": "len",
      "defined_out": [
        "i#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "459": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "460": {
      "op": "frame_dig -3",
      "defined_out": [
        "i#0",
        "name#0 (copy)",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%2#0",
        "name#0 (copy)"
      ]
    },
    "462": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "463": {
      "op": "bz register_medicine_for_header@1",
      "stack_out": [
        "tmp%0#0",
        "i#0"
      ]
    },
    "466": {
      "op": "bytec_2 // 0x80",
      "defined_out": [
        "0x80",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "0x80"
      ]
    },
    "467": {
      "op": "frame_bury 0"
    },
    "469": {
      "retsub": true,
      "op": "retsub"
    },
    "470": {
      "block": "register_medicine_after_for@6",
      "stack_in": [
        "tmp%0#0",
        "i#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "472": {
      "op": "pushbytes 0x0032",
      "defined_out": [
        "0x0032",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%7#0",
        "0x0032"
      ]
    },
    "476": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x0032",
        "expiry#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%7#0",
        "0x0032",
        "expiry#0 (copy)"
      ]
    },
    "478": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%7#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "479": {
      "op": "frame_dig -1",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "quantity#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%7#0",
        "encoded_tuple_buffer%2#0",
        "quantity#0 (copy)"
      ]
    },
    "481": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%7#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "482": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "encoded_tuple_buffer%3#0",
        "tmp%7#0"
      ]
    },
    "483": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%4#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "484": {
      "op": "frame_dig -3",
      "defined_out": [
        "encoded_tuple_buffer%4#0",
        "name#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "encoded_tuple_buffer%4#0",
        "name#0 (copy)"
      ]
    },
    "486": {
      "op": "concat",
      "defined_out": [
        "new_med#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "new_med#0"
      ]
    },
    "487": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "new_med#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "new_med#0",
        "0"
      ]
    },
    "488": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0",
        "new_med#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "new_med#0",
        "0",
        "\"medicines\""
      ]
    },
    "489": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "new_med#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "new_med#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "490": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "new_med#0",
        "maybe_value%2#0"
      ]
    },
    "491": {
      "op": "bytec 7 // 0x0002",
      "defined_out": [
        "0x0002",
        "maybe_value%2#0",
        "new_med#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "new_med#0",
        "maybe_value%2#0",
        "0x0002"
      ]
    },
    "493": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "0x0002",
        "new_med#0"
      ]
    },
    "495": {
      "op": "concat",
      "defined_out": [
        "maybe_value%2#0",
        "result%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "result%1#0"
      ]
    },
    "496": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "result%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "result%1#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "498": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "result%1#0",
        "maybe_value%2#0 (copy)",
        "0"
      ]
    },
    "499": {
      "op": "extract_uint16",
      "defined_out": [
        "l_count%0#0",
        "maybe_value%2#0",
        "result%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "result%1#0",
        "l_count%0#0"
      ]
    },
    "500": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "maybe_value%2#0"
      ]
    },
    "502": {
      "op": "extract 2 0",
      "defined_out": [
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "505": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "result%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "506": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "result%1#0"
      ]
    },
    "508": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "concat_result%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "concat_result%0#0"
      ]
    },
    "511": {
      "op": "bytec_0 // \"medicines\"",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "concat_result%0#0",
        "\"medicines\""
      ]
    },
    "512": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "\"medicines\"",
        "concat_result%0#0"
      ]
    },
    "513": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%0#0",
        "i#0"
      ]
    },
    "514": {
      "op": "bytec_2 // 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "0x80"
      ]
    },
    "515": {
      "op": "frame_bury 0"
    },
    "517": {
      "retsub": true,
      "op": "retsub"
    },
    "518": {
      "subroutine": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.request_medicine",
      "params": {
        "name#0": "bytes"
      },
      "block": "request_medicine",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "521": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0"
      ]
    },
    "522": {
      "op": "dup",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "m#0",
        "0"
      ]
    },
    "523": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0"
      ],
      "stack_out": [
        "m#0",
        "0",
        "\"medicines\""
      ]
    },
    "524": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "525": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "m#0",
        "maybe_value%0#0"
      ]
    },
    "526": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "527": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0"
      ]
    },
    "528": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "529": {
      "block": "request_medicine_for_header@1",
      "stack_in": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "531": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "533": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "534": {
      "op": "bz request_medicine_after_for@9",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "537": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0"
      ]
    },
    "538": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0",
        "\"medicines\""
      ]
    },
    "539": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "540": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "541": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "542": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0"
      ]
    },
    "545": {
      "op": "frame_dig 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "547": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "548": {
      "op": "cover 3",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "550": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "551": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "552": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "554": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "555": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "556": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "558": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "559": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0"
      ]
    },
    "560": {
      "op": "uncover 3",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "562": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "1"
      ]
    },
    "563": {
      "op": "+",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "564": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "i#0"
      ]
    },
    "565": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "567": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0"
      ]
    },
    "568": {
      "op": "dig 1",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "570": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0"
      ]
    },
    "571": {
      "op": "dig 3",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "573": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "574": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0"
      ]
    },
    "576": {
      "op": "intc_1 // 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0",
        "2"
      ]
    },
    "577": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "578": {
      "op": "dig 4",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "580": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "581": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "582": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "584": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "585": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "586": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0"
      ]
    },
    "587": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "589": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "m#0",
        "m#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)"
      ]
    },
    "590": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)",
        "0"
      ]
    },
    "591": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0"
      ]
    },
    "592": {
      "op": "dig 1",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "m#0 (copy)"
      ]
    },
    "594": {
      "op": "len",
      "defined_out": [
        "i#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "595": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "596": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "m#0",
        "name#0 (copy)",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "tmp%2#0",
        "name#0 (copy)"
      ]
    },
    "598": {
      "op": "==",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "599": {
      "op": "bz request_medicine_for_header@1",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "602": {
      "op": "frame_dig 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "604": {
      "error": "Index access is out of bounds",
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "m#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "607": {
      "op": "bytec 8 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "i#0",
        "m#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "609": {
      "op": "b>",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "610": {
      "op": "bz request_medicine_else_body@6",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "613": {
      "op": "frame_dig 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "615": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "m#0",
        "reinterpret_biguint%2#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "618": {
      "op": "txn FirstValidTime",
      "defined_out": [
        "i#0",
        "m#0",
        "reinterpret_biguint%2#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%2#0",
        "tmp%5#0"
      ]
    },
    "620": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "m#0",
        "reinterpret_biguint%2#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%2#0",
        "tmp%6#0"
      ]
    },
    "621": {
      "op": "b>=",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "622": {
      "op": "bz request_medicine_else_body@6",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "625": {
      "op": "pushbytes 0x0022",
      "defined_out": [
        "0x0022",
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0x0022"
      ]
    },
    "629": {
      "op": "txn Sender",
      "defined_out": [
        "0x0022",
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0x0022",
        "tmp%8#0"
      ]
    },
    "631": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "632": {
      "op": "frame_dig -1",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "encoded_tuple_buffer%2#0",
        "name#0 (copy)"
      ]
    },
    "634": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "m#0",
        "req#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "req#0"
      ]
    },
    "635": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "0"
      ]
    },
    "636": {
      "op": "bytec 4 // \"medicine_requests\"",
      "defined_out": [
        "\"medicine_requests\"",
        "0",
        "i#0",
        "m#0",
        "req#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "0",
        "\"medicine_requests\""
      ]
    },
    "638": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "m#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "req#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "639": {
      "error": "check self.medicine_requests exists",
      "op": "assert // check self.medicine_requests exists",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "maybe_value%2#0"
      ]
    },
    "640": {
      "op": "bytec 7 // 0x0002",
      "defined_out": [
        "0x0002",
        "i#0",
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "maybe_value%2#0",
        "0x0002"
      ]
    },
    "642": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "0x0002",
        "req#0"
      ]
    },
    "644": {
      "op": "concat",
      "defined_out": [
        "i#0",
        "m#0",
        "maybe_value%2#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "result%1#0"
      ]
    },
    "645": {
      "op": "dig 1",
      "defined_out": [
        "i#0",
        "m#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "result%1#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "647": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "result%1#0",
        "maybe_value%2#0 (copy)",
        "0"
      ]
    },
    "648": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "l_count%0#0",
        "m#0",
        "maybe_value%2#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "result%1#0",
        "l_count%0#0"
      ]
    },
    "649": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "maybe_value%2#0"
      ]
    },
    "651": {
      "op": "extract 2 0",
      "defined_out": [
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "m#0",
        "result%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "654": {
      "op": "intc_2 // 1",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "655": {
      "op": "uncover 3",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "result%1#0"
      ]
    },
    "657": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "concat_result%0#0",
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "concat_result%0#0"
      ]
    },
    "660": {
      "op": "bytec 4 // \"medicine_requests\"",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "concat_result%0#0",
        "\"medicine_requests\""
      ]
    },
    "662": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "\"medicine_requests\"",
        "concat_result%0#0"
      ]
    },
    "663": {
      "op": "app_global_put",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "664": {
      "op": "bytec_2 // 0x80",
      "defined_out": [
        "0x80",
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0x80"
      ]
    },
    "665": {
      "op": "frame_bury 0"
    },
    "667": {
      "retsub": true,
      "op": "retsub"
    },
    "668": {
      "block": "request_medicine_else_body@6",
      "stack_in": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0x00"
      ]
    },
    "669": {
      "op": "frame_bury 0"
    },
    "671": {
      "retsub": true,
      "op": "retsub"
    },
    "672": {
      "block": "request_medicine_after_for@9",
      "stack_in": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0x00"
      ]
    },
    "673": {
      "op": "frame_bury 0"
    },
    "675": {
      "retsub": true,
      "op": "retsub"
    },
    "676": {
      "subroutine": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.approve_request",
      "params": {
        "name#0": "bytes"
      },
      "block": "approve_request",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "679": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0"
      ]
    },
    "680": {
      "op": "dupn 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0"
      ]
    },
    "682": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0"
      ]
    },
    "684": {
      "op": "dupn 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0"
      ]
    },
    "686": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "0"
      ]
    },
    "687": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "0",
        "\"medicines\""
      ]
    },
    "688": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "689": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "maybe_value%0#0"
      ]
    },
    "690": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "691": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0"
      ]
    },
    "692": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "693": {
      "block": "approve_request_for_header@1",
      "stack_in": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 7",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "695": {
      "op": "frame_dig 6",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "697": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "698": {
      "op": "bz approve_request_after_for@16",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "701": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "0"
      ]
    },
    "702": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "0",
        "\"medicines\""
      ]
    },
    "703": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "704": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "705": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "706": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0"
      ]
    },
    "709": {
      "op": "frame_dig 7",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "711": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "712": {
      "op": "cover 3",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "714": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "715": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "716": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "718": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "719": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "720": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "722": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "723": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0"
      ]
    },
    "724": {
      "op": "uncover 3",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "726": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "1"
      ]
    },
    "727": {
      "op": "+",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "728": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "i#0"
      ]
    },
    "729": {
      "op": "frame_bury 7",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "731": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0"
      ]
    },
    "732": {
      "op": "dig 1",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "734": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0"
      ]
    },
    "735": {
      "op": "dig 3",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "737": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "738": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0"
      ]
    },
    "740": {
      "op": "intc_1 // 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0",
        "2"
      ]
    },
    "741": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "742": {
      "op": "dig 4",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "744": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "745": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "746": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "748": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "749": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "750": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0"
      ]
    },
    "751": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "753": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "m#0",
        "m#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)"
      ]
    },
    "754": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)",
        "0"
      ]
    },
    "755": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0"
      ]
    },
    "756": {
      "op": "dig 1",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "m#0 (copy)"
      ]
    },
    "758": {
      "op": "len",
      "defined_out": [
        "i#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "759": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "760": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "m#0",
        "name#0 (copy)",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%2#0",
        "name#0 (copy)"
      ]
    },
    "762": {
      "op": "==",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "763": {
      "op": "bz approve_request_for_header@1",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "766": {
      "op": "frame_dig 0",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "768": {
      "error": "Index access is out of bounds",
      "op": "extract 18 32 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "771": {
      "op": "txn Sender",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "773": {
      "op": "!=",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%6#0"
      ]
    },
    "774": {
      "op": "bz approve_request_after_if_else@5",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "777": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "0x00"
      ]
    },
    "778": {
      "op": "frame_bury 0"
    },
    "780": {
      "retsub": true,
      "op": "retsub"
    },
    "781": {
      "block": "approve_request_after_if_else@5",
      "stack_in": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "0"
      ]
    },
    "782": {
      "op": "bytec 4 // \"medicine_requests\"",
      "defined_out": [
        "\"medicine_requests\"",
        "0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "0",
        "\"medicine_requests\""
      ]
    },
    "784": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "785": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ]
    },
    "786": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "787": {
      "op": "cover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ]
    },
    "789": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "791": {
      "error": "check self.medicine_requests exists",
      "op": "assert // check self.medicine_requests exists",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0"
      ]
    },
    "792": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "793": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_length%1#0"
      ]
    },
    "794": {
      "op": "frame_bury 3",
      "defined_out": [
        "array_length%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "796": {
      "op": "intc_0 // 0",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "797": {
      "op": "frame_bury 4",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "799": {
      "block": "approve_request_for_header@6",
      "stack_in": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "801": {
      "op": "frame_dig 3",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0",
        "array_length%1#0"
      ]
    },
    "803": {
      "op": "<",
      "defined_out": [
        "array_length%1#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%1#0"
      ]
    },
    "804": {
      "op": "bz approve_request_after_for@13",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "807": {
      "op": "frame_dig 1",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%2#0"
      ]
    },
    "809": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0"
      ]
    },
    "812": {
      "op": "frame_dig 4",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_index_internal%0#0"
      ]
    },
    "814": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "815": {
      "op": "cover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "817": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_index_internal%0#0 (copy)",
        "2"
      ]
    },
    "818": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_offset_offset%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0"
      ]
    },
    "819": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_offset_offset%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "821": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "array_head_and_tail%1#0 (copy)",
        "item_offset_offset%1#0"
      ]
    },
    "822": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0"
      ]
    },
    "823": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "item_index_internal%0#0"
      ]
    },
    "825": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "826": {
      "op": "+",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "next_index%1#0"
      ]
    },
    "827": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "next_index%1#0",
        "next_index%1#0"
      ]
    },
    "828": {
      "op": "frame_bury 5",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "next_index%1#0"
      ]
    },
    "830": {
      "op": "frame_dig 3",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "next_index%1#0",
        "array_length%1#0"
      ]
    },
    "832": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "next_index%1#0 (copy)"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "next_index%1#0",
        "array_length%1#0",
        "next_index%1#0 (copy)"
      ]
    },
    "834": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "has_next%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "next_index%1#0",
        "has_next%1#0"
      ]
    },
    "835": {
      "op": "dig 3",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "next_index%1#0",
        "has_next%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "837": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "next_index%1#0",
        "has_next%1#0",
        "end_of_array%1#0"
      ]
    },
    "838": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_index%1#0"
      ]
    },
    "840": {
      "op": "intc_1 // 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_index%1#0",
        "2"
      ]
    },
    "841": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "next_item_offset_offset%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_item_offset_offset%1#0"
      ]
    },
    "842": {
      "op": "dig 4",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_item_offset_offset%1#0",
        "array_head_and_tail%1#0 (copy)"
      ]
    },
    "844": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "array_head_and_tail%1#0 (copy)",
        "next_item_offset_offset%1#0"
      ]
    },
    "845": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "end_of_array%1#0",
        "has_next%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "next_item_offset%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "has_next%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0"
      ]
    },
    "846": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "end_of_array%1#0",
        "next_item_offset%1#0",
        "has_next%1#0"
      ]
    },
    "848": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%1#0",
        "array_length%1#0",
        "end_offset%1#0",
        "item_index_internal%0#0",
        "item_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%1#0",
        "item_offset%1#0",
        "end_offset%1#0"
      ]
    },
    "849": {
      "op": "substring3",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0"
      ]
    },
    "850": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "req#0"
      ]
    },
    "851": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0"
      ]
    },
    "853": {
      "op": "dup",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "req#0 (copy)"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "req#0 (copy)"
      ]
    },
    "854": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "req#0 (copy)",
        "0"
      ]
    },
    "855": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "item_start_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "item_start_offset%1#0"
      ]
    },
    "856": {
      "op": "dig 1",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "item_start_offset%1#0",
        "req#0 (copy)"
      ]
    },
    "858": {
      "op": "len",
      "defined_out": [
        "array_length%1#0",
        "item_end_offset%1#0",
        "item_index_internal%0#0",
        "item_start_offset%1#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "859": {
      "op": "substring3",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%7#0"
      ]
    },
    "860": {
      "op": "frame_dig -1",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0",
        "name#0 (copy)",
        "next_index%1#0",
        "req#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%7#0",
        "name#0 (copy)"
      ]
    },
    "862": {
      "op": "==",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%8#0"
      ]
    },
    "863": {
      "op": "bz approve_request_after_if_else@11",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "866": {
      "op": "frame_dig 0",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "868": {
      "error": "Index access is out of bounds",
      "op": "extract 10 8 // on error: Index access is out of bounds",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "reinterpret_biguint%0#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "871": {
      "op": "bytec 8 // 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "reinterpret_biguint%0#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "0x0000000000000000"
      ]
    },
    "873": {
      "op": "b>",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%9#0"
      ]
    },
    "874": {
      "op": "bz approve_request_after_if_else@11",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "877": {
      "op": "frame_dig 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "req#0"
      ]
    },
    "879": {
      "error": "Index access is out of bounds",
      "op": "extract 2 32 // on error: Index access is out of bounds",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%12#0"
      ]
    },
    "882": {
      "op": "txn FirstValidTime",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "tmp%12#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%12#0",
        "to_encode%0#0"
      ]
    },
    "884": {
      "op": "itob",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "tmp%12#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%12#0",
        "val_as_bytes%1#0"
      ]
    },
    "885": {
      "op": "pushbytes 0x002a",
      "defined_out": [
        "0x002a",
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "tmp%12#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "tmp%12#0",
        "val_as_bytes%1#0",
        "0x002a"
      ]
    },
    "889": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "val_as_bytes%1#0",
        "0x002a",
        "tmp%12#0"
      ]
    },
    "891": {
      "op": "concat",
      "defined_out": [
        "array_length%1#0",
        "encoded_tuple_buffer%2#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "892": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%1#0"
      ]
    },
    "893": {
      "op": "concat",
      "defined_out": [
        "array_length%1#0",
        "encoded_tuple_buffer%3#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "894": {
      "op": "frame_dig -1",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "encoded_tuple_buffer%3#0",
        "name#0 (copy)"
      ]
    },
    "896": {
      "op": "concat",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "record#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "record#0"
      ]
    },
    "897": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "record#0",
        "0"
      ]
    },
    "898": {
      "op": "bytec 6 // \"medicine_records\"",
      "defined_out": [
        "\"medicine_records\"",
        "0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "record#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "record#0",
        "0",
        "\"medicine_records\""
      ]
    },
    "900": {
      "op": "app_global_get_ex",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "next_index%1#0",
        "record#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "record#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "901": {
      "error": "check self.medicine_records exists",
      "op": "assert // check self.medicine_records exists",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "record#0",
        "maybe_value%3#0"
      ]
    },
    "902": {
      "op": "bytec 7 // 0x0002",
      "defined_out": [
        "0x0002",
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "next_index%1#0",
        "record#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "record#0",
        "maybe_value%3#0",
        "0x0002"
      ]
    },
    "904": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%3#0",
        "0x0002",
        "record#0"
      ]
    },
    "906": {
      "op": "concat",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "next_index%1#0",
        "req#0",
        "result%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%3#0",
        "result%1#0"
      ]
    },
    "907": {
      "op": "dig 1",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_value%3#0 (copy)",
        "next_index%1#0",
        "req#0",
        "result%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%3#0",
        "result%1#0",
        "maybe_value%3#0 (copy)"
      ]
    },
    "909": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%3#0",
        "result%1#0",
        "maybe_value%3#0 (copy)",
        "0"
      ]
    },
    "910": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "l_count%0#0",
        "m#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "next_index%1#0",
        "req#0",
        "result%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%3#0",
        "result%1#0",
        "l_count%0#0"
      ]
    },
    "911": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "maybe_value%3#0"
      ]
    },
    "913": {
      "op": "extract 2 0",
      "defined_out": [
        "array_length%1#0",
        "item_index_internal%0#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0",
        "result%1#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0"
      ]
    },
    "916": {
      "op": "intc_2 // 1",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "result%1#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1"
      ]
    },
    "917": {
      "op": "uncover 3",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "l_count%0#0",
        "l_head_and_tail%0#0",
        "1",
        "result%1#0"
      ]
    },
    "919": {
      "callsub": "_puya_lib.arc4.dynamic_array_concat_dynamic_element",
      "op": "callsub dynamic_array_concat_dynamic_element",
      "defined_out": [
        "array_length%1#0",
        "concat_result%0#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "concat_result%0#0"
      ]
    },
    "922": {
      "op": "bytec 6 // \"medicine_records\"",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "concat_result%0#0",
        "\"medicine_records\""
      ]
    },
    "924": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "\"medicine_records\"",
        "concat_result%0#0"
      ]
    },
    "925": {
      "op": "app_global_put",
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "926": {
      "op": "bytec_2 // 0x80",
      "defined_out": [
        "0x80",
        "array_length%1#0",
        "item_index_internal%0#0",
        "m#0",
        "maybe_value%2#0",
        "next_index%1#0",
        "req#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "0x80"
      ]
    },
    "927": {
      "op": "frame_bury 0"
    },
    "929": {
      "retsub": true,
      "op": "retsub"
    },
    "930": {
      "block": "approve_request_after_if_else@11",
      "stack_in": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "item_index_internal%0#0"
      ]
    },
    "932": {
      "op": "frame_bury 4",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "934": {
      "op": "b approve_request_for_header@6"
    },
    "937": {
      "block": "approve_request_after_for@13",
      "stack_in": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "0x00"
      ]
    },
    "938": {
      "op": "frame_bury 0"
    },
    "940": {
      "retsub": true,
      "op": "retsub"
    },
    "941": {
      "block": "approve_request_after_for@16",
      "stack_in": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%2#0",
        "req#0",
        "array_length%1#0",
        "item_index_internal%0#0",
        "next_index%1#0",
        "tmp%0#0",
        "i#0",
        "0x00"
      ]
    },
    "942": {
      "op": "frame_bury 0"
    },
    "944": {
      "retsub": true,
      "op": "retsub"
    },
    "945": {
      "subroutine": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.return_medicine",
      "params": {
        "name#0": "bytes"
      },
      "block": "return_medicine",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "948": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "949": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"medicines\""
      ]
    },
    "950": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "951": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "952": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "0"
      ]
    },
    "953": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "954": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0"
      ]
    },
    "955": {
      "block": "return_medicine_for_header@1",
      "stack_in": [
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "957": {
      "op": "frame_dig 0",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "959": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "960": {
      "op": "bz return_medicine_after_for@6",
      "stack_out": [
        "tmp%0#0",
        "i#0"
      ]
    },
    "963": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "0"
      ]
    },
    "964": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "0",
        "\"medicines\""
      ]
    },
    "965": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "966": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "967": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "968": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0"
      ]
    },
    "971": {
      "op": "frame_dig 1",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "973": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "974": {
      "op": "cover 3",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "976": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "977": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "978": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "980": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "981": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "982": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "984": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "985": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0"
      ]
    },
    "986": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "988": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "1"
      ]
    },
    "989": {
      "op": "+",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "990": {
      "op": "dup",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "i#0"
      ]
    },
    "991": {
      "op": "frame_bury 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "993": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0"
      ]
    },
    "994": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "996": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0"
      ]
    },
    "997": {
      "op": "dig 3",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "999": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "1000": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0"
      ]
    },
    "1002": {
      "op": "intc_1 // 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0",
        "2"
      ]
    },
    "1003": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "1004": {
      "op": "dig 4",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1006": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "1007": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "1008": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "1010": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "1011": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "1012": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "m#0",
        "m#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)"
      ]
    },
    "1013": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)",
        "0"
      ]
    },
    "1014": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0"
      ]
    },
    "1015": {
      "op": "dig 1",
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "m#0 (copy)"
      ]
    },
    "1017": {
      "op": "len",
      "defined_out": [
        "i#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1018": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1019": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "name#0 (copy)",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%2#0",
        "name#0 (copy)"
      ]
    },
    "1021": {
      "op": "==",
      "defined_out": [
        "i#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1022": {
      "op": "bz return_medicine_for_header@1",
      "stack_out": [
        "tmp%0#0",
        "i#0"
      ]
    },
    "1025": {
      "op": "bytec_2 // 0x80",
      "defined_out": [
        "0x80",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "0x80"
      ]
    },
    "1026": {
      "op": "frame_bury 0"
    },
    "1028": {
      "retsub": true,
      "op": "retsub"
    },
    "1029": {
      "block": "return_medicine_after_for@6",
      "stack_in": [
        "tmp%0#0",
        "i#0"
      ],
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00"
      ],
      "stack_out": [
        "tmp%0#0",
        "i#0",
        "0x00"
      ]
    },
    "1030": {
      "op": "frame_bury 0"
    },
    "1032": {
      "retsub": true,
      "op": "retsub"
    },
    "1033": {
      "subroutine": "smart_contracts.lend_borrow.contract.MedicineLendingPlatform.is_expired",
      "params": {
        "name#0": "bytes"
      },
      "block": "is_expired",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1036": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0"
      ]
    },
    "1037": {
      "op": "dup",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "m#0",
        "0"
      ]
    },
    "1038": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0"
      ],
      "stack_out": [
        "m#0",
        "0",
        "\"medicines\""
      ]
    },
    "1039": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "m#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1040": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "m#0",
        "maybe_value%0#0"
      ]
    },
    "1041": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "1042": {
      "op": "extract_uint16",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0"
      ]
    },
    "1043": {
      "op": "intc_0 // 0",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1044": {
      "block": "is_expired_for_header@1",
      "stack_in": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1046": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "tmp%0#0"
      ]
    },
    "1048": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1049": {
      "op": "bz is_expired_after_for@6",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1052": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0"
      ]
    },
    "1053": {
      "op": "bytec_0 // \"medicines\"",
      "defined_out": [
        "\"medicines\"",
        "0",
        "i#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0",
        "\"medicines\""
      ]
    },
    "1054": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1055": {
      "error": "check self.medicines exists",
      "op": "assert // check self.medicines exists",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0"
      ]
    },
    "1056": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "1057": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1060": {
      "op": "frame_dig 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "1062": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "i#0 (copy)"
      ]
    },
    "1063": {
      "op": "cover 3",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)"
      ]
    },
    "1065": {
      "op": "intc_1 // 2",
      "defined_out": [
        "2",
        "array_head_and_tail%0#0",
        "i#0",
        "i#0 (copy)",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "i#0 (copy)",
        "2"
      ]
    },
    "1066": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0"
      ]
    },
    "1067": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "i#0",
        "item_offset_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1069": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "array_head_and_tail%0#0 (copy)",
        "item_offset_offset%0#0"
      ]
    },
    "1070": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "i#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "maybe_value%1#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1071": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "1073": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "1074": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0"
      ]
    },
    "1075": {
      "op": "uncover 3",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "1077": {
      "op": "intc_2 // 1",
      "defined_out": [
        "1",
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "1"
      ]
    },
    "1078": {
      "op": "+",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "1079": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0",
        "i#0"
      ]
    },
    "1080": {
      "op": "frame_bury 2",
      "defined_out": [
        "array_head_and_tail%0#0",
        "array_length%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "array_length%0#0",
        "i#0"
      ]
    },
    "1082": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0"
      ]
    },
    "1083": {
      "op": "dig 1",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "array_length%0#0",
        "i#0 (copy)"
      ]
    },
    "1085": {
      "error": "Index access is out of bounds",
      "op": "- // on error: Index access is out of bounds",
      "defined_out": [
        "array_head_and_tail%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0"
      ]
    },
    "1086": {
      "op": "dig 3",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1088": {
      "op": "len",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "i#0",
        "has_next%0#0",
        "end_of_array%0#0"
      ]
    },
    "1089": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0"
      ]
    },
    "1091": {
      "op": "intc_1 // 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "i#0",
        "2"
      ]
    },
    "1092": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0"
      ]
    },
    "1093": {
      "op": "dig 4",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset_offset%0#0",
        "array_head_and_tail%0#0 (copy)"
      ]
    },
    "1095": {
      "op": "swap",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "array_head_and_tail%0#0 (copy)",
        "next_item_offset_offset%0#0"
      ]
    },
    "1096": {
      "op": "extract_uint16",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_of_array%0#0",
        "has_next%0#0",
        "i#0",
        "item_offset%0#0",
        "next_item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "has_next%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0"
      ]
    },
    "1097": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_of_array%0#0",
        "next_item_offset%0#0",
        "has_next%0#0"
      ]
    },
    "1099": {
      "op": "select",
      "defined_out": [
        "array_head_and_tail%0#0",
        "end_offset%0#0",
        "i#0",
        "item_offset%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "end_offset%0#0"
      ]
    },
    "1100": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "1101": {
      "op": "dup",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0"
      ]
    },
    "1102": {
      "op": "frame_bury 0",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "1104": {
      "op": "dup",
      "defined_out": [
        "i#0",
        "m#0",
        "m#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)"
      ]
    },
    "1105": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "m#0 (copy)",
        "0"
      ]
    },
    "1106": {
      "op": "extract_uint16",
      "defined_out": [
        "i#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0"
      ]
    },
    "1107": {
      "op": "dig 1",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "m#0 (copy)"
      ]
    },
    "1109": {
      "op": "len",
      "defined_out": [
        "i#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1110": {
      "op": "substring3",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1111": {
      "op": "frame_dig -1",
      "defined_out": [
        "i#0",
        "m#0",
        "name#0 (copy)",
        "tmp%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "tmp%2#0",
        "name#0 (copy)"
      ]
    },
    "1113": {
      "op": "==",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1114": {
      "op": "bz is_expired_for_header@1",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ]
    },
    "1117": {
      "op": "frame_dig 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "m#0"
      ]
    },
    "1119": {
      "error": "Index access is out of bounds",
      "op": "extract 2 8 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "m#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "1122": {
      "op": "txn FirstValidTime",
      "defined_out": [
        "i#0",
        "m#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "tmp%4#0"
      ]
    },
    "1124": {
      "op": "itob",
      "defined_out": [
        "i#0",
        "m#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "reinterpret_biguint%0#0",
        "tmp%5#0"
      ]
    },
    "1125": {
      "op": "b<",
      "defined_out": [
        "i#0",
        "m#0",
        "tmp%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "to_encode%0#0"
      ]
    },
    "1126": {
      "op": "bytec_1 // 0x00",
      "defined_out": [
        "0x00",
        "i#0",
        "m#0",
        "tmp%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "to_encode%0#0",
        "0x00"
      ]
    },
    "1127": {
      "op": "intc_0 // 0",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "to_encode%0#0",
        "0x00",
        "0"
      ]
    },
    "1128": {
      "op": "uncover 2",
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0x00",
        "0",
        "to_encode%0#0"
      ]
    },
    "1130": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0",
        "i#0",
        "m#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "encoded_bool%0#0"
      ]
    },
    "1131": {
      "op": "frame_bury 0"
    },
    "1133": {
      "retsub": true,
      "op": "retsub"
    },
    "1134": {
      "block": "is_expired_after_for@6",
      "stack_in": [
        "m#0",
        "tmp%0#0",
        "i#0"
      ],
      "op": "bytec_2 // 0x80",
      "defined_out": [
        "0x80"
      ],
      "stack_out": [
        "m#0",
        "tmp%0#0",
        "i#0",
        "0x80"
      ]
    },
    "1135": {
      "op": "frame_bury 0"
    },
    "1137": {
      "retsub": true,
      "op": "retsub"
    }
  }
}